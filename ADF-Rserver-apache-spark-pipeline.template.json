{
    "contentVersion": "1.0.0.0",
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "parameters": {
        "clusterLoginUserName": {
            "type": "string",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "clusterLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "sshUserName": {
            "type": "string",
            "metadata": {
                "description": "These credentials can be used to remotely and securely access the cluster."
            }
        },
        "sshPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "clusterWorkerNodeCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of worker nodes in the HDInsight cluster."
            }
        },
	"parameterStorageAccountName": {
	    "type": "string",
            "metadata": {
		"description": "Name of the Storage account created by you. One of the container in this account has the dataset"
	    }
	},
	"parameterStorageAccountAccessKey" : {
	    "type": "securestring",
            "metadata": {
                "description": "The access Key for the storage account referred by parameterStorageAccountName"
            }
        },
	"parameterStorageContainerName": {
	     "type": "string",
             "metadata": {
                "description": "This container has the dataset. We will attach this to the cluster"
            }
        }
    },
    "variables": {
        "apiVersion": "2015-10-01",
        "blobInputDataset": "AzureBlobInputTraining",
        "blobInputDatasetScoring": "AzureBlobInputScoring",
        "clusterName": "[toLower(concat('rspark', uniquestring(resourceGroup().id)))]",
        "clusterType": "spark",
        "clusterApiVersion": "2015-03-01-preview",
        "dataFactoryName": "[concat('DataFactory',uniquestring(resourceGroup().id))]",
        "dataPipelineName" : "datafactorytraining",
        "dataPipelineNamescoring" : "datafactoryscoring",
        "defaultApiVersion": "2015-05-01-preview",
        "finalOutputDataset": "finalOutputDatasetTraining",
        "finalOutputDatasetScoring": "finalOutputDatasetScoring",
        "hdInsightLinkedServiceName": "HDInsightLinkedService",
        "publicStorageLinkedServiceName": "PublicDataSetAzureStorageLinkedService",
        "rscript-name": "RScriptForNYCTaxi.R",
        "rscript-name-scoring": "RScriptForNYCTaxiScoring.R",
        "storageAccountName": "[parameters('parameterStorageAccountName')]",
        "storageLinkedServiceName": "AzureStorageLinkedService"         
    },
    "resources": [
        {
            "name": "[concat(variables('clusterName'),'/R-Server')]",
            "type": "Microsoft.HDInsight/clusters/applications",
            "apiVersion": "[variables('clusterApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.HDInsight/clusters/',variables('clusterName'))]"
            ],
            "properties": {
                "marketPlaceIdentifier": "Microsoft.RServerForHDInsight.8.0.3",
                "computeProfile": {
                    "roles": [
                        {
                            "name": "edgenode",
                            "targetInstanceCount": 1,
                            "hardwareProfile": {
                                "vmSize": "Standard_D4_v2"
                            }
                        }
                    ]
                },
                "installScriptActions": [],
                "uninstallScriptActions": [],
                "httpsEndpoints": [],
                "applicationType": "RServer"
            }
        },
        {
            "name": "[variables('clusterName')]",
            "type": "Microsoft.HDInsight/clusters",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('clusterApiVersion')]",
            "dependsOn": [
            ],
            "tags": {},
            "properties": {
                "clusterVersion": "3.4",
                "osType": "Linux",
                "tier": "Premium",
                "clusterDefinition": {
                    "kind": "[variables('clusterType')]",
                    "configurations": {
                        "gateway": {
                            "restAuthCredential.isEnabled": true,
                            "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
                            "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
                        }
                    }
                },
                "storageProfile": {
                    "storageaccounts": [
                        {
                            "name": "[replace(replace(concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), variables('defaultApiVersion')).primaryEndpoints.blob),'https:',''),'/','')]",
                            "isDefault": true,
                            "container": "[parameters('parameterStorageContainerName')]",
                            "key": "[parameters('parameterStorageAccountAccessKey')]"
                        }
                    ]
                },
                "computeProfile": {
                    "roles": [
                        {
                            "name": "headnode",
                            "targetInstanceCount": "2",
                            "hardwareProfile": {
                                "vmSize": "Standard_D3_v2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUserName')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            }
                        },
                        {
                            "name": "workernode",
                            "targetInstanceCount": "[parameters('clusterWorkerNodeCount')]",
                            "hardwareProfile": {
                                "vmSize": "Standard_D3_v2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUserName')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('dataFactoryName')]",
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.DataFactory/datafactories",
            "location": "westus",
            "resources": [
                {
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'))]"
                    ],
                    "type": "linkedservices",
                    "name": "[variables('storageLinkedServiceName')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "properties": {
                        "type": "AzureStorage",
                        "typeProperties": {
                            "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',parameters('parameterStorageAccountAccessKey'))]"
                        }
                    }
                },
                {
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedservices/', variables('storageLinkedServiceName'))]",
                        "[concat('Microsoft.HDInsight/clusters/',variables('clusterName'))]",
                        "[concat('Microsoft.HDInsight/clusters/',variables('clusterName'),'/applications/R-Server')]"
                    ],
                    "type": "linkedservices",
                    "name": "[variables('hdInsightLinkedServiceName')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "properties": {
                        "type": "HDInsight",
                        "typeProperties": {
                            "clusterUri": "[concat('https://',variables('clusterName'),'.azurehdinsight.net/')]",
                            "userName": "[parameters('clusterLoginUserName')]",
                            "password": "[parameters('clusterLoginPassword')]",
                            "linkedServiceName": "[variables('storageLinkedServiceName')]"
                        }
                    }
                },
                {
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedServices/', variables('storageLinkedServiceName'))]"
                    ],
                    "type": "datasets",
                    "name": "[variables('blobInputDataset')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "properties": {
                        "published": false,
                        "type": "AzureBlob",
                        "linkedServiceName": "[variables('storageLinkedServiceName')]",
                        "typeProperties": {
                            "folderPath": "[concat(parameters('parameterStorageContainerName'),'/')]"
                        },
                        "availability": {
                            "frequency": "Month",
                            "interval": 1
                        },
			"external": true
                    }
                },
                {
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedServices/', variables('storageLinkedServiceName'))]"
                    ],
                    "type": "datasets",
                    "name": "[variables('finalOutputDataset')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "properties": {
                        "published": false,
                        "type": "AzureBlob",
                        "linkedServiceName": "[variables('storageLinkedServiceName')]",
                        "typeProperties": {
                            "folderPath": "[parameters('parameterStorageContainerName')]"
                        },
                        "availability": {
                            "frequency": "Month",
                            "interval": 1
                        }
                    }
                },
                {
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedServices/', variables('storageLinkedServiceName'))]"
                    ],
                    "type": "datasets",
                    "name": "[variables('blobInputDatasetScoring')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "properties": {
                        "published": false,
                        "type": "AzureBlob",
                        "linkedServiceName": "[variables('storageLinkedServiceName')]",
                        "typeProperties": {
                            "folderPath": "[concat(parameters('parameterStorageContainerName'),'/')]"
                        },
                        "availability": {
                            "frequency": "Month",
                            "interval": 1
                        },
                        "external": true
                    }
                },
                {
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedServices/', variables('storageLinkedServiceName'))]"
                    ],
                    "type": "datasets",
                    "name": "[variables('finalOutputDatasetScoring')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "properties": {
                        "published": false,
                        "type": "AzureBlob",
                        "linkedServiceName": "[variables('storageLinkedServiceName')]",
                        "typeProperties": {
                            "folderPath": "[parameters('parameterStorageContainerName')]"
                        },
                        "availability": {
                            "frequency": "Month",
                            "interval": 1
                        }
                    }
                },
                {
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedServices/', variables('storageLinkedServiceName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedServices/', variables('hdInsightLinkedServiceName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('blobInputDataset'))]"
                    ],
                    "type": "datapipelines",
                    "name": "[variables('dataPipelineName')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "properties": {
                        "description": "My first Azure Data Factory pipeline",
                        "activities": [
                            {
                                "type": "HDInsightMapReduce",
                                "typeProperties": {
                                    "className": "com.adf.jobonhdi.JobOnHdiLauncher",
                                    "jarFilePath": "[concat(parameters('parameterStorageContainerName'),'/scripts/com.adf.adfjobonhdi.jar')]",
                                    "jarLinkedService": "[variables('storageLinkedServiceName')]",
                                    "arguments": [
                                        "--files",
                                        "[concat('wasb://',parameters('parameterStorageContainerName'),'@', variables('storageAccountName'),'.blob.core.windows.net/scripts/com.adf.appsample.jar,',' wasb://',parameters('parameterStorageContainerName'),'@',variables('storageAccountName'),'.blob.core.windows.net/scripts/',variables('rscript-name'))]",
                                        "--command",
                                        "[concat('source /usr/lib64/microsoft-r/8.0/hadoop/RevoHadoopEnvVars.site; Revo64 CMD BATCH \"--args ','/data/nyc_taxi_joined_csv / \" ',variables('rscript-name'), ' /dev/stdout')]"
                                    ]
                                },
                                "inputs": [
                                    {
                                        "name": "[variables('blobInputDataset')]"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "[variables('finalOutputDataset')]"
                                    }
                                ],
                                "policy": {
                                    "timeout": "00:30:00",
                                    "concurrency": 1,
                                    "retry": 1
                                },
                                "scheduler": {
                                    "frequency": "Month",
                                    "interval": 1
                                },
                                "name": "HDInsight Job Launcher",
                                "description": "Submits a general HDInsight Job",
                                "linkedServiceName": "[variables('hdInsightLinkedServiceName')]"
                            }
                        ],
                        "start": "2016-04-01T00:00:00Z",
                        "end": "2016-04-02T00:00:00Z",
                        "isPaused": false
                    }
                },{
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedServices/', variables('storageLinkedServiceName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/linkedServices/', variables('hdInsightLinkedServiceName'))]",
                        "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('blobInputDataset'))]"
                    ],
                    "type": "datapipelines",
                    "name": "[variables('dataPipelineNameScoring')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "properties": {
                        "description": "My first Azure Data Factory pipeline",
                        "activities": [
                            {
                                "type": "HDInsightMapReduce",
                                "typeProperties": {
                                    "className": "com.adf.jobonhdi.JobOnHdiLauncher",
                                    "jarFilePath": "[concat(parameters('parameterStorageContainerName'),'/scripts/com.adf.adfjobonhdi.jar')]",
                                    "jarLinkedService": "[variables('storageLinkedServiceName')]",
                                    "arguments": [
                                        "--files",
                                        "[concat('wasb://',parameters('parameterStorageContainerName'),'@', variables('storageAccountName'),'.blob.core.windows.net/scripts/com.adf.appsample.jar,',' wasb://',parameters('parameterStorageContainerName'),'@',variables('storageAccountName'),'.blob.core.windows.net/scripts/',variables('rscript-name-scoring'))]",
                                        "--command",
                                        "[concat('source /usr/lib64/microsoft-r/8.0/hadoop/RevoHadoopEnvVars.site; Revo64 CMD BATCH \"--args ','/data/nyc_taxi_joined_csv_scoring /model /scoringOutput.csv \" ',variables('rscript-name-scoring'), ' /dev/stdout')]"
                                    ]
                                },
                                "inputs": [
                                    {
                                        "name": "[variables('blobInputDatasetScoring')]"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "[variables('finalOutputDatasetScoring')]"
                                    }
                                ],
                                "policy": {
                                    "timeout": "00:30:00",
                                    "concurrency": 1,
                                    "retry": 1
                                },
                                "scheduler": {
                                    "frequency": "Month",
                                    "interval": 1
                                },
                                "name": "HDInsight Job Launcher",
                                "description": "Submits a general HDInsight Job",
                                "linkedServiceName": "[variables('hdInsightLinkedServiceName')]"
                            }
                        ],
                        "start": "2016-04-01T00:00:00Z",
                        "end": "2016-04-02T00:00:00Z",
                        "isPaused": true
                    }
                }
            ]
        }
    ]
}
